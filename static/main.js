// Generated by CoffeeScript 1.9.1
(function() {
  var _, bind, cell, init, rx, rxStorage, rxt, session, tags;

  rx = window.rx, rxStorage = window.rxStorage, _ = window._;

  session = rxStorage.session;

  cell = rx.cell, rxt = rx.rxt, bind = rx.bind;

  tags = rxt.tags;

  init = function() {
    var $coffeeOut, $translateBox, hasError, results;
    $translateBox = tags.textarea({
      id: 'translateBox',
      "class": 'form-control',
      style: {
        fontFamily: "monospace",
        marginBottom: 15
      },
      value: session.getItem("lastText"),
      change: function() {
        return session.setItem("lastText", $translateBox.val());
      },
      rows: 20,
      required: true
    });
    results = rx.cell("");
    $coffeeOut = tags.pre(bind(function() {
      var ref;
      return (ref = results.get()) != null ? ref : "";
    }));
    hasError = rx.cell(false);
    return $('body').append(tags.div({
      "class": 'container'
    }, [
      tags.div({
        "class": 'row'
      }, tags.div({
        "class": 'col-md-12'
      }, [
        tags.h1("HTML to Reactive"), tags.p([
          "A simple utility for converting HTML to the ", tags.a({
            href: "http://yang.github.io/reactive-coffee/"
          }, "reactive-coffee"), " templating language."
        ]), tags.p(tags.small(["Note: This package will not convert Javascript into coffee-script. ", "Never include third-party Javascript without understanding what it does."]))
      ])), tags.div({
        "class": 'row'
      }, [
        tags.form({
          "class": 'form col-sm-12',
          submit: function(event) {
            var html;
            event.preventDefault();
            html = $translateBox.val();
            return $.ajax({
              url: '/translate',
              type: "POST",
              dataType: 'json',
              data: JSON.stringify({
                html: html
              }),
              mimeType: 'application/json',
              contentType: "application/json; charset=ascii"
            }).done(function(res) {
              hasError.set(false);
              return results.set(res.rc);
            }).fail(function() {
              return hasError.set(true);
            });
          }
        }, [
          tags.div({
            "class": bind(function() {
              return ['row', hasError.get() ? "has-error" : ''];
            })
          }, tags.div({
            "class": 'col-md-12'
          }, [
            tags.label({
              "class": 'control-label h2',
              "for": 'translateBox'
            }, "Enter HTML here"), $translateBox
          ])), tags.div({
            "class": 'row'
          }, rx.flatten([
            bind(function() {
              if (hasError.get()) {
                return tags.div({
                  "class": "col-md-4"
                }, tags.span({
                  "class": 'h3 text-danger'
                }, "Invalid HTML!"));
              } else {
                return "";
              }
            }), tags.div({
              "class": 'col-md-4 pull-right'
            }, tags.button({
              "class": 'btn btn-primary btn-block btn-lg',
              type: 'submit'
            }, ["Translate!"]))
          ]))
        ])
      ]), tags.div({
        "class": 'row'
      }, [
        tags.h2({
          "class": 'col-md-12'
        }, [
          "Reactive Template Code ", tags.button({
            type: 'button',
            "class": 'btn btn-default',
            click: function() {
              var range, selection;
              if (document.body.createTextRange) {
                range = document.body.createTextRange();
                range.moveToElementText($coffeeOut[0]);
                return range.select();
              } else if (window.getSelection) {
                selection = window.getSelection();
                range = document.createRange();
                range.selectNodeContents($coffeeOut[0]);
                selection.removeAllRanges();
                return selection.addRange(range);
              }
            }
          }, "Select All")
        ])
      ]), tags.div({
        "class": 'row'
      }, tags.div({
        "class": 'col-sm-12',
        style: {
          marginBottom: 30
        }
      }, bind(function() {
        if (!hasError.get()) {
          return $coffeeOut;
        }
      }))), tags.div({
        "class": 'row'
      }, tags.footer({
        "class": 'col-sm-12'
      }, [
        tags.p([
          "This application written by ", tags.a({
            href: "http://www.rmehlinger.com"
          }, "Richard Mehlinger"), " and released under the ", tags.a({
            href: "https://opensource.org/licenses/MIT"
          }, "MIT License"), ". Find our source code ", tags.a({
            href: "https://github.com/rmehlinger/html2reactive"
          }, "on Github"), ". Â© 2015."
        ])
      ]))
    ]));
  };

  init();

}).call(this);

//# sourceMappingURL=main.js.map
